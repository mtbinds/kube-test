pipeline {
  agent any

  environment {
    IMAGE_NAME = "flask-app"
    IMAGE_TAG = "latest"
    LOCAL_IMAGE = "flask-app:latest"
  }

  stages {
    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/mtbinds/kube-test.git'
      }
    }

    stage('Build Docker Image') {
      steps {
        script {
          sh '''
            echo "Configuration de l'environnement Docker de Minikube"
            eval $(minikube docker-env)

            echo "Construction de l'image Docker locale : flask-app:latest"
            docker build -t flask-app:latest .
          '''
        }
      }
    }

    stage('Déploiement Minikube') {
      steps {
        script {
          sh '''
            echo "Déploiement de l'application sur Minikube"
            eval $(minikube docker-env)
            kubectl apply -f deployment.yaml
          '''
        }
      }
    }
  }

  post {
    success {
      echo 'Pipeline terminé avec succès.'
    }
    failure {
      echo 'Une erreur est survenue.'
    }
  }
}
